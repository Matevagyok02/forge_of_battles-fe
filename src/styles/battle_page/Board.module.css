.container {
    @apply fixed w-full h-full top-0 flex justify-center pointer-events-none;
    perspective: 64vh;
    perspective-origin: center;
    translate: 0 -1vh;

    .board {
        @apply w-fit h-fit pointer-events-auto flex gap-8;
        rotate: x 30deg;
        transform-origin: bottom center;
        translate: 0 -8vh;

        .battlefield {
            @apply grid gap-2;
            grid-template-columns: repeat(3, 3fr);
            grid-template-rows: repeat(3, 4fr);

            .slot {
                .placeholder {
                    @apply relative flex items-center justify-center text-center w-auto;
                    height: 25vh;
                    aspect-ratio: var(--card-aspect-ratio);
                    font-size: 3vh;
                    border-radius: 4%;
                    animation: placeholderAppear 1s linear forwards;

                    --color: grey;
                    box-shadow: inset 0 0 8px 2px var(--color);
                    color: var(--color);

                    & h1 {
                        @apply opacity-0
                    }
                }

                .placeholder::before {
                    @apply absolute block w-full h-full;
                    content: "";
                    z-index: -1;
                    background-image: radial-gradient(100% 100% at center, rgba(0, 0, 0, 0.7), transparent);
                }
            }

            .slot:hover .placeholder h1 {
                opacity: 1;
                filter: drop-shadow(0 0 4px black);
            }
        }
    }
}

.cardPiles {
    @apply flex flex-col gap-8 items-center p-8;

    .drawPile, .discardPile {
        aspect-ratio: var(--card-aspect-ratio);
        height: 25vh;
        position: relative;
    }

    .discardPile > li {
        position: absolute;
    }
}

.cardPiles[data-value="right"] {
    @apply justify-end;
    filter: drop-shadow(-0.8vh 0.8vh 4px black);
}

.cardPiles[data-value="left"] {
    @apply justify-start;
    filter: drop-shadow(0.8vh 0.8vh 4px black);
}

.pileSizeIndicator {
    @apply flex justify-end items-end;
    width: 104%;
    height: 110%;

    & > div {
        @apply round flex items-center justify-center;
        width: 2em;
        height: 2em;
        background-color: rgba(0, 0, 0, 0.8);
        border: 1px solid darkgoldenrod;

        & > h1 {
            color: goldenrod;
            font-size: 1.2em;
        }
    }
}

.drawButton {
    @apply absolute h-full flex justify-center items-center cursor-pointer pointer-events-auto;
    left: -10%;
    width: 120%;
    z-index: 10;

    & > button {
        @apply w-full text-center py-2;
        font-size: 1.2em;
        border-block: 1px solid;
        border-image: linear-gradient(
                to right,
                transparent,
                goldenrod,
                transparent
        ) 1;
        background-image: linear-gradient(
                to right,
                transparent,
                rgba(0, 0, 0, 0.6) 10%,
                rgba(0, 0, 0, 0.8),
                rgba(0, 0, 0, 0.6) 90%,
                transparent
        );
    }
}

/*card back side*/
.back {
    --color: grey;
    background-color: var(--color);
}

.slot .card:hover,
.discardPile:hover,
.drawPile.hovered,
.drawButton > button:hover
{
    --color: grey;
    filter: drop-shadow(0 0 4px var(--color));
}

.light {
    --color: var(--light-1) !important;
}
.lightSecondary {
    --color: var(--light-2) !important;
}
.darkness {
    --color: var(--darkness-1) !important;
}
.darknessSecondary {
    --color: var(--darkness-2) !important;
}
.venom {
    --color: var(--venom-1) !important;
}
.venomSecondary {
    --color: var(--venom-2) !important;
}

@keyframes placeholderAppear {
    0% {
        opacity: 0;
    }
    25% {
        opacity: 0.25;
    }
    50% {
        opacity: 0.5;
    }
    75% {
        opacity: 0.75;
    }
    100% {
    }
}