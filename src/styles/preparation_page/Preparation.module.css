.deck {
    aspect-ratio: var(--card-aspect-ratio);
    height: 256px;
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: flex-end;
    background-color: black;
    border-radius: 8px;
    transform-origin: center bottom;
    cursor: pointer;
    filter: drop-shadow(0 24px 16px black);
    rotate: x 10deg;
    background-size: cover;

    & h1 {
        @apply gold-text;
        font-size: 32px;
        pointer-events: none;
    }

    & span {
        height: 64px;
        filter: drop-shadow(0 0 4px black) drop-shadow(0 0 8px black) drop-shadow(0 0 16px black);
    }

    &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-image: url("../../assets/svg/card_frame.svg");
        background-size: cover;
        filter: drop-shadow(0 0 8px goldenrod) drop-shadow(0 0 16px black);
    }
}

main.preparation {
    background-image: url("../../assets/background/preparation_bg.jpg");
    box-shadow: inset 0 0 70px 20px black;

    .infoDisplayContainer {
        @apply absolute right-10 bottom-10;

        .infoDisplay {
            width: 320px;
            min-height: 256px;
            background-color: var(--bg-9);
            padding: 16px;
            display: flex;
            flex-direction: column;
            gap: 12px;

            .timeLeft {
                @apply text-xl px-2;
            }

            .opponentStatus {
                @apply flex px-2 gap-2 h-10;

                & > h1 {
                    @apply text-2xl;
                }

                & i {
                    font-size: 32px;
                }

                & i[data-value="true"] {
                    color: goldenrod;
                    filter: drop-shadow(0 0 8px goldenrod);
                }

                & i[data-value="false"] {
                    @apply aspect-square text-center;
                    color: grey;
                    filter: drop-shadow(0 0 8px white);
                    line-height: unset;
                }
            }

            .deckInfo {
                @apply px-2;

                & h1 {
                    @apply text-2xl;
                }
            }
        }
    }

    .deckSelectionContainer {
        @apply flex flex-col items-center justify-between h-full;

        .decks {
            @apply flex justify-center items-center;
            width: 896px;
            height: 1px;
            perspective: 1024px;

            & > * {
                translate: 0 -64px;
            }
        }

        & > h1 {
            @apply text-4xl py-8;
        }

        & menu {
            @apply h-40 flex flex-col gap-5 items-center;

            .readyButton {
                scale: 1.4;
            }

            & > h1 {
                @apply text-4xl;
            }
        }
    }
}

.center {
    transform: translate(0, 100px) scale(1); /* Center card, larger */
}

.right:hover, .left:hover {
    filter: drop-shadow(0 0 4px goldenrod) drop-shadow(0 24px 16px black);
}

.right {
    transform: translate(260px) scale(0.8); /* Right card, smaller */
}

.left {
    transform: translate(-260px) scale(0.8); /* Left card, smaller */
}

.center::after {
    content: "";
    position: absolute;
    top: -56px;
    left: 50%;
    width: 48px;
    height: 48px;
    translate: -50%;
    background-color: goldenrod;
    clip-path: polygon(
            0 0,
            50% 100%,
            100% 0,
            50% calc(100% - 4px)
    );
    animation: levitate 2s infinite;
    filter: drop-shadow(0 0 8px goldenrod);
}

.leftToCenter {
    animation: left-to-center 0.5s linear forwards;
}

.centerToRight {
    animation: center-to-right 0.5s linear forwards;
}

.rightToLeft {
    z-index: -1;
    animation: right-to-left 0.5s linear forwards;
}

.centerToLeft {
    animation: center-to-left 0.5s linear forwards;
}

.leftToRight {
    z-index: -1;
    animation: left-to-right 0.5s linear forwards;
}

.rightToCenter {
    animation: right-to-center 0.5s linear forwards;
}

@keyframes right-to-center {
    0% {
        transform: translate(260px, 0) scale(0.8);
    }
    25% {
        transform: translate(230px, 40px) scale(0.85);
    }
    50% {
        transform: translate(200px, 80px) scale(0.9);
    }
    75% {
        transform: translate(100px, 90px) scale(0.95);
    }
    100% {
        transform: translate(0, 100px) scale(1);
    }
}

@keyframes center-to-left {
    0% {
        transform: translate(0, 100px) scale(1);
    }
    25% {
        transform: translate(-100px, 90px) scale(0.95);
    }
    50% {
        transform: translate(-200px, 80px) scale(0.9);
    }
    75% {
        transform: translate(-230px, 40px) scale(0.85);
    }
    100% {
        transform: translate(-260px) scale(0.8);
    }
}

@keyframes left-to-right {
    0% {
        transform: translate(-260px) scale(0.8);
    }
    25% {
        transform: translate(-130px, -100px) scale(0.7);
    }
    50% {
        transform: translate(0px, -150px) scale(0.6);
    }
    75% {
        transform: translate(130px, -100px) scale(0.7);
    }
    100% {
        transform: translate(260px) scale(0.8);
    }
}

@keyframes left-to-center {
    0% {
        transform: translate(-260px, 0) scale(0.8);
    }
    25% {
        transform: translate(-230px, 40px) scale(0.85);
    }
    50% {
        transform: translate(-200px, 80px) scale(0.9);
    }
    75% {
        transform: translate(-100px, 90px) scale(0.95);
    }
    100% {
        transform: translate(0, 100px) scale(1);
    }
}

@keyframes center-to-right {
    0% {
        transform: translate(0, 100px) scale(1);
    }
    25% {
        transform: translate(100px, 90px) scale(0.95);
    }
    50% {
        transform: translate(200px, 80px) scale(0.9);
    }
    75% {
        transform: translate(230px, 40px) scale(0.85);
    }
    100% {
        transform: translate(260px) scale(0.8);
    }
}

@keyframes right-to-left {
    0% {
        transform: translate(260px) scale(0.8);
    }
    25% {
        transform: translate(130px, -100px) scale(0.7);
    }
    50% {
        transform: translate(0px, -150px) scale(0.6);
    }
    75% {
        transform: translate(-130px, -100px) scale(0.7);
    }
    100% {
        transform: translate(-260px) scale(0.8);
    }
}

@keyframes levitate {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-8px);
    }
    100% {
        transform: translateY(0);
    }
}

